name: Generate Contribution Snake

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      snake-created: ${{ steps.snake-gen.outputs.snake_generated }}
    
    steps:
      - name: Generate snake.svg
        id: snake-gen
        uses: Platane/snk@v2
        with:
          github_user_name: ${{ github.repository_owner }}
        # 输出文件名保存在环境变量
        run: echo "svg_path=github-snake.svg" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main-repo

      - name: Move snake.svg to assets
        run: |
          mkdir -p main-repo/assets
          cp ${{ steps.snake-gen.outputs.svg_path }} main-repo/assets/${{ steps.snake-gen.outputs.svg_path }}
          
      - name: Update README with the new snake
        run: |
          cd main-repo
          # 使用更可靠的替换方法
          if grep -q "<!-- START_SNAKE -->" README.md; then
            start_line=$(grep -n "<!-- START_SNAKE -->" README.md | cut -d: -f1)
            end_line=$(grep -n "<!-- END_SNAKE -->" README.md | cut -d: -f1)
            if [ -n "$start_line" ] && [ -n "$end_line" ]; then
              sed -i "${start_line},${end_line}d" README.md
              sed -i "${start_line}i <!-- START_SNAKE -->" README.md
              sed -i "${start_line}a <img src=\"assets/${{ steps.snake-gen.outputs.svg_path }}\" alt=\"GitHub Contribution Snake\">" README.md
              sed -i "${start_line}a <!-- END_SNAKE -->" README.md
            fi
          else
            # 添加新标记
            echo -e "\n<!-- START_SNAKE -->\n<img src=\"assets/${{ steps.snake-gen.outputs.svg_path }}\" alt=\"GitHub Contribution Snake\">\n<!-- END_SNAKE -->" >> README.md
          fi

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          repository: main-repo
          branch: main
          commit_message: "📦 Update GitHub Contribution Snake"
        env:
          # 设置输出变更状态
          GIT_AUTO_COMMIT_MESSAGE: "📦 Updated snake at $(date)"
        # 在commit步骤设置输出
        run: echo "commit_message=📦 Updated snake at $(date)" >> $GITHUB_OUTPUT

  notify:
    name: Notify Update
    needs: generate
    if: ${{ always() && needs.generate.outputs.snake-created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Send notification
        run: |
          echo "Snake updated at $(date)"
          echo "Commit: ${{ needs.generate.outputs.commit_message }}"
        # 使用环境变量传递消息
        env:
          UPDATE_MESSAGE: "Snake updated successfully"
        run: echo "$UPDATE_MESSAGE" >> $GITHUB_STEP_SUMMARY
